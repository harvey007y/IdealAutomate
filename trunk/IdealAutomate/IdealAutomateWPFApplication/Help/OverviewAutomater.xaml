
 <Page x:Class="Hardcodet.Wpf.Samples.Help.OverviewAutomater"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	Title="Ideal Automate Overview"
	  >

    <FlowDocumentReader ViewingMode="Scroll">
        <FlowDocument FontSize="20">
            <Paragraph>
                <Image Source="/Images/help1.png" Width="190" Height="190" Margin="0,0,30,0" />
                <Run FontSize="30" BaselineAlignment="Center">Ideal Automate Overview</Run>
            </Paragraph>
            
            <Paragraph>
                Ideal Automate allows one to automate almost any task. It does this by allowing you to write scripts that can find images on the screen.  By finding an image on the screen, you are able to locate where you want to read or write something, regardless of which application the image resides within.  The fact that you can read and write to virtually any location makes it possible to create a degree of artificial intelligence where the script is able to perform real-time, problem-solving activities. For example, the script can read a piece of information, interpret what it has read, and then make decisions in real time about what to do based on that interpretation.
            </Paragraph>
            <Paragraph>
                The Windows Snipping Tool
                <Image Source="/Images/SnippingTool.PNG"  Height="45" VerticalAlignment="Bottom" /> can be very useful in allowing you to cut-n-paste images into your scripts. If you are unfamiliar with the Windows Snipping Tool, it is a free tool that is automatically included in the Windows Accessories folder. If you are having trouble figuring out how to use the snipping tool, you should google it in order to learn more about it.
            </Paragraph>            
            <Table CellSpacing="5" BorderThickness="1" BorderBrush="Black">
                <TableRowGroup>
                    <TableRow Background="Gainsboro" FontWeight="Bold">                        
                        <TableCell ColumnSpan="5">
                            <Paragraph TextAlignment="Center">Three Levels of Scripts</Paragraph>
                        </TableCell>
                        
                    </TableRow>
                </TableRowGroup>

                <TableRowGroup>
                    <TableRow>
                        <TableCell Background="Gainsboro" FontWeight="Bold" ColumnSpan="2" >
                            <Paragraph>1. Local Scripts</Paragraph>
                        </TableCell>
                        <TableCell ColumnSpan="3" >
                            <Paragraph>If you only want your script to be available on your local computer, it is called a local script. Local scripts are the only scripts that you can execute directly and modify. All of the content of a local script is kept on your local computer, so it is the most secure type of script.</Paragraph>
                        </TableCell>
                        
                    </TableRow>
                    <TableRow>
                        <TableCell Background="Gainsboro" FontWeight="Bold"  ColumnSpan="2" >
                            <Paragraph>2. Personal Scripts</Paragraph>
                        </TableCell>
                        <TableCell ColumnSpan="3">
                            <Paragraph>If you want to be able to execute a script you have written on your local computer on another computer, you can clone that script to a personal script.  A personal script can only be viewed by someone that logs in to Ideal Automate with your userid and password.  This allows you (or you can allow a group of people to login with a specific userid and password) to see your personal scripts on multiple computers by using the same userid and password on those computers.  You cannot directly execute or modify a personal script. However, you can download a copy of a personal script to a local script, and you can modify or execute the local script.</Paragraph>
                        </TableCell>

                    </TableRow>
                </TableRowGroup>
                <TableRowGroup>
                    <TableRow>
                        <TableCell Background="Gainsboro" FontWeight="Bold"  ColumnSpan="2" >
                            <Paragraph>3. Public Script</Paragraph>
                        </TableCell>
                        <TableCell ColumnSpan="3">
                            <Paragraph >If you want to share a script with everyone, you can clone it to a public script.  Public scripts can be downloaded by anyone in order to create local scripts on their computer, which they can modify or execute locally.</Paragraph>
                        </TableCell>
                        
                    </TableRow>
                </TableRowGroup>
            </Table>
           
            <Paragraph>
               Scripts can include other scripts within themselves. The fact that you can include a single script within multiple scripts means that you can reuse basic building blocks that you have created.
              
            </Paragraph>
            <Table CellSpacing="5" BorderThickness="1" BorderBrush="Black">
                <TableRowGroup>
                    <TableRow>
                        <TableCell>
                            <Paragraph>
                                <Image Source="/Images/IncludeScript.PNG"  Margin="5,5,5,5" Height="250" HorizontalAlignment="Center" />
                            </Paragraph>
                        </TableCell>
                    </TableRow>
                </TableRowGroup>
            </Table>
            <Paragraph>
                Scripts consist of a sequence of actions.  These actions contain a verb and one or two nouns called entities that are used by the verb. The entities that you use in your actions must be defined as a primitive, an array, an image, or an expression. Expressions are primarily used to perform calculations with entities.
                
            
            </Paragraph>
            <Table CellSpacing="5" BorderThickness="1" BorderBrush="Black">
                <TableRowGroup>
                    <TableRow>
                        <TableCell>
                            <Paragraph>
                                <Image Source="/Images/Logic.PNG"  Margin="5,5,5,5" HorizontalAlignment="Center" />
                            </Paragraph>
                        </TableCell>
                    </TableRow>
                </TableRowGroup>
            </Table>
            <Paragraph>
                When you run a script, you can cancel it at anytime by pressing the cancel button.
            </Paragraph>
            <Paragraph>
                Once the script has run, statistics on the number of actions performed will be added to the local script. When a script completes executing, you are presented with a dialog box that allows you to indicate whether the script executed successfully. These statistics on the percent of successful executions are also kept on the script. If the script has been cloned to personal or public, the statistics at those levels will be updated as well. This allows you and other people (if you clone your script to public) to see which scripts are being used the most and also how accurately they have been executing.
            </Paragraph>
            <Table CellSpacing="5" BorderThickness="1" BorderBrush="Black">
                <TableRowGroup>
                    <TableRow>
                        <TableCell>
                            <Paragraph>
                                <Image Source="/Images/Stats.PNG"  Margin="5,5,5,5" HorizontalAlignment="Center" />
                            </Paragraph>
                        </TableCell>
                    </TableRow>
                </TableRowGroup>
            </Table>
            <Paragraph>
                Another thing that happens after a script runs is that the steps that were executed are written to the Results tab.  The Results tab can be very useful in helping you to debug your scripts and in helping you to figure out why a particular image may not have been found.

            </Paragraph>
            <Table CellSpacing="5" BorderThickness="1" BorderBrush="Black">
                <TableRowGroup>
                    <TableRow>
                        <TableCell>
                            <Paragraph>
                            <Image Source="/Images/Results.PNG"  Margin="5,5,5,5" HorizontalAlignment="Center" />
                            </Paragraph>
                        </TableCell>
                    </TableRow>
                </TableRowGroup>
            </Table>

        </FlowDocument>
    </FlowDocumentReader>

</Page>

